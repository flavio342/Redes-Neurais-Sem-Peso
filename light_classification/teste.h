const PROGMEM int SIGNAL_SIZE = 32;
const PROGMEM int IMPUT_SIZE = SIGNAL_SIZE*5;
const PROGMEM int BITS_PER_RAM = 25;
const PROGMEM int N_NEURONIOS = 6;
const PROGMEM float INPUT_FACTOR = 32;

const PROGMEM String labels[5] = {"front","back","left","right","idle"};
const PROGMEM int nNeuronios = 6;
const PROGMEM int nIndicesDeEntradas = 25;
const PROGMEM int indicesDeEntradas[5][6][25] = {{{146,30,116,114,48,101,83,33,144,159,74,115,87,153,149,16,34,148,26,11,32,73,140,44,99},{103,8,63,126,43,152,141,151,10,100,53,90,86,111,98,59,89,72,22,132,119,133,49,1,62},{108,128,20,31,71,124,50,45,91,127,139,142,145,113,69,66,27,122,129,96,117,95,5,137,85},{131,12,39,112,28,14,52,125,136,3,143,75,134,150,65,37,57,64,70,60,123,80,121,156,21},{110,81,24,155,94,2,106,19,130,138,68,9,84,88,41,105,82,61,55,92,47,157,51,35,135},{118,38,40,104,17,120,7,158,36,102,79,46,13,42,18,97,93,6,25,154,76,29,109,0,147}},{{147,25,53,0,99,92,151,71,16,121,58,130,120,3,135,106,6,2,23,138,144,104,95,115,148},{59,81,141,159,109,75,30,45,128,64,69,33,91,134,126,89,70,84,72,68,156,107,55,80,118},{43,29,28,38,127,105,17,24,102,40,19,140,125,36,31,73,76,90,60,46,96,146,142,77,101},{54,52,137,14,131,93,136,124,100,4,108,129,154,111,50,10,9,116,139,41,78,110,32,132,61},{11,155,122,27,65,98,149,79,87,145,34,62,117,153,49,112,1,133,48,74,63,57,158,85,143},{7,18,51,67,5,37,157,86,94,113,83,44,119,47,42,114,20,15,26,13,123,12,88,82,150}},{{53,104,153,49,89,35,4,127,91,136,96,120,50,109,125,41,152,103,114,130,138,10,66,25,68},{79,108,37,117,93,131,52,82,9,142,140,19,24,148,107,147,62,31,129,64,88,48,102,59,54},{18,0,73,30,36,101,16,12,137,90,144,150,33,44,45,15,132,43,13,63,14,141,139,26,28},{84,7,71,95,76,126,23,11,145,151,135,56,115,94,116,81,149,46,98,157,124,106,159,119,3},{158,105,2,55,87,60,122,22,39,128,38,133,20,74,27,8,134,75,17,67,121,51,85,70,47},{113,65,100,6,34,40,77,97,80,110,5,78,72,154,32,92,123,155,143,58,61,86,83,146,57}},{{145,51,158,152,136,23,137,17,35,155,8,132,95,134,82,27,2,40,43,110,81,120,19,79,117},{1,154,47,99,102,28,67,22,55,131,54,20,159,139,26,128,138,78,16,52,119,57,130,147,15},{111,125,21,116,45,144,87,3,77,48,104,106,91,18,24,58,10,12,112,89,133,135,88,50,6},{94,148,41,141,153,31,13,156,114,73,143,39,42,124,109,59,76,121,142,38,25,115,86,146,122},{118,34,103,93,60,84,151,33,150,105,80,74,29,46,56,149,49,107,129,4,30,127,83,65,5},{97,61,68,85,0,32,140,90,7,9,71,70,11,63,157,69,37,44,98,108,100,72,126,96,75}},{{36,150,128,141,42,136,35,91,27,138,64,79,33,52,6,106,112,81,14,57,156,96,59,157,146},{29,125,10,21,127,113,130,25,11,46,45,20,105,84,116,124,24,110,58,26,121,8,140,66,34},{63,143,50,49,80,148,3,99,12,5,103,139,17,43,144,30,107,155,147,115,40,83,15,38,142},{126,23,22,61,9,88,60,89,118,149,28,100,97,4,87,152,67,55,86,65,1,75,154,158,104},{74,133,137,39,129,16,90,68,94,123,41,120,93,7,132,54,47,44,109,95,71,2,56,76,153},{151,119,48,102,101,19,70,85,114,131,73,31,72,32,117,92,53,69,145,77,82,122,18,51,108}}};
const PROGMEM int nDados[5][6] = {{28,16,10,8,20,16},{2,3,2,1,2,2},{33,43,12,29,14,13},{24,8,24,16,35,9},{10,23,32,21,7,17}};
const PROGMEM long int tabelaDeDadosKeys[5][6][43] = {{{999711,2048287,18827199,672031,2048319,17781695,999743,18826047,18830143,18829759,18825663,17781567,18826175,1000255,18829631,18563903,17777471,18830271,737567,1003839,18825503,738111,17781055,2048831,17776959,18831295,18825535,1004351,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{26580142,9819310,9798830,9815278,9802986,9803182,9802922,9798890,9798826,9802926,9733290,9803246,9802990,9803178,9803242,9811434,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{9598567,9598566,14055015,13858407,9594471,9860710,13792870,9594470,9860711,13792871,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{30277321,30015177,30275273,30013129,30013128,30275272,21100232,29488840,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{9041175,9174291,13366531,9043203,9174295,9172247,13366547,9037075,9041171,9043219,9028611,9172243,13368595,13362435,9041155,9036819,9028867,9036803,9174275,9037059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{13991634,12970643,12970642,14024338,14024339,12974739,13990546,13990547,13991635,12941971,12941970,12929682,13991571,12937874,12933778,13991570,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{3288480,3288224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{13363554,4974946,4843874,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{18918167,18918166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{5611638,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1720736,1720737,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{3679232,20456448,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{2937533,11326397,19714877,2933309,11326141,15516597,9224885,11326133,13419445,28103357,11322037,15520693,28103605,28103613,19715005,19714613,2937405,32297909,19714997,2937525,2933437,2933301,32297917,19714741,19714749,836149,2937397,23909309,23909181,836157,19714621,19714869,28103349,0,0,0,0,0,0,0,0,0,0},{21872745,21872744,21545056,21610604,21741672,21547628,21678692,21875305,21610592,21676652,21744236,22006377,21610600,21741676,22003816,22003817,21676132,21678700,21613164,22006376,21873257,21940844,21940845,22006381,30068332,21610596,21875308,21875309,21809772,21611116,22006380,22004329,21875304,21611112,21741664,22004332,22007404,21676140,21679724,21676128,21741668,21742188,21545064},{14228876,14376332,14376396,14639068,14384524,14385116,14384604,14384588,14245260,14376412,14376924,14253452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{30622401,13747137,13747145,13714377,30622665,30532545,13713601,13648065,30655433,13746625,13853377,30524353,13845441,13853633,13648449,13714113,13755329,13845185,13878209,30622657,30655425,13714369,30491585,13648577,30524361,13886401,30663617,30630593,30491329,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{4319651,4319650,6417323,12708771,6417327,4320167,12708259,12708783,14805935,4320162,4320163,4320175,4320171,12708779,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{16741446,16741447,16741443,16741442,16741440,16743503,16741479,16741444,16741455,16741454,16743490,16741475,16743494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{1403346,20261371,18165234,18165235,28666322,18164219,26552786,18180562,18164210,1386962,18181586,26570194,1386946,1387986,26553842,28667378,18165243,18165202,18181619,18181618,26570226,18164178,1404370,26552818,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{20220822,20220804,24415110,24415108,24415126,32820134,24415142,19172228,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{18866267,18604315,1802265,1769497,20668505,1826843,18604379,18866265,1826841,18604059,1827097,20963675,1794073,1827099,20701273,20701275,1818649,18866459,1818651,18604123,18604121,1245209,1785881,18866651,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{14808418,6354274,6419816,14808554,14808422,14742882,15857002,14741858,14808430,14742886,14741862,14808426,15790434,6419822,6353250,6353248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{12839779,12774375,13069155,29879015,12773731,12740711,12839907,13264999,13298023,12774371,8546403,12740707,12773479,30403559,12774243,13298151,29616867,12773863,12773603,13102051,12773607,13102055,13364199,12773475,8544355,13297767,29879267,12839911,13295847,13626343,13297895,29551331,13298663,12773735,12774247,0,0,0,0,0,0,0,0},{22897627,22897659,25031675,22930427,22930395,24994811,24994779,25027579,25027547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{24966280,24966281,25097352,24966345,24966344,24966152,25097353,25097417,24966793,24966792,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{282639,4474895,317455,264207,280583,282631,4540431,313359,278535,4505615,4507663,284679,4511759,311311,4544527,278543,4573199,284687,4478991,311303,315407,4577295,280591,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{9874459,9939995,9956443,10480987,10480731,10480735,12512603,9890835,10464347,9940063,10398811,10484831,9891163,10464351,9940059,9874451,9874523,9891099,12053787,9889819,9873427,9956379,9889811,9890843,9939999,10415195,9890067,9955355,9890075,9890907,9873435,9956635,0,0,0,0,0,0,0,0,0,0,0},{1063225,14713,14712,1588600,1588601,1719673,1719672,540025,540024,15737,15736,1752440,1063224,14648,1064312,1064313,671096,14649,1063289,671097,1063288,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{32918682,33442970,32656538,32918938,33443226,32656794,32656602,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{3594416,3463328,3463329,1497328,3463408,1366176,3594481,3594480,1366256,1366192,3594417,3463345,3463344,3594992,3463392,7788784,7788785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}};
const PROGMEM int tabelaDeDadosValues[5][6][43]= {{{96,2,7,6,5,1,94,21,13,4,9,7,13,2,3,1,1,15,95,3,4,1,2,1,2,14,41,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{3,1,28,1,2,5,25,3,234,47,91,2,15,3,3,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{46,251,12,2,6,3,2,70,50,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,3,1,31,90,11,298,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{27,24,1,4,2,4,4,203,88,5,5,6,2,1,12,3,5,3,3,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{2,2,12,1,3,17,1,5,1,34,40,17,38,289,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{472,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,338,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{314,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{473,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{2,471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{93,380,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{37,1,7,41,12,2,2,4,1,32,1,1,11,20,8,4,47,1,2,9,2,5,13,8,25,140,2,3,4,41,66,2,11,0,0,0,0,0,0,0,0,0,0},{6,1,22,21,11,2,1,16,35,3,24,17,24,65,1,2,1,4,2,3,5,7,10,103,1,3,3,5,1,8,57,4,2,4,27,1,5,1,1,2,11,41,2},{2,33,24,4,23,6,17,14,307,19,8,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{25,16,2,2,1,2,4,10,8,1,14,21,28,14,4,191,12,65,5,30,19,11,8,31,10,10,16,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,1,86,3,12,2,3,24,12,21,253,17,113,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{198,5,12,165,148,1,2,3,2,22,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{17,2,2,3,2,1,2,9,1,32,226,4,4,12,2,17,2,62,4,26,29,26,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{2,106,165,179,4,2,26,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{2,2,6,206,5,30,5,1,49,6,5,1,2,7,2,8,60,1,3,40,4,5,51,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{8,1,1,2,7,49,2,44,5,16,1,20,2,1,126,218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,7,2,1,3,47,3,1,8,1,89,136,24,1,2,32,2,1,4,13,7,7,21,10,14,8,2,3,1,24,4,1,21,1,1,0,0,0,0,0,0,0,0},{326,61,5,9,38,29,1,30,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},{{469,77,1,8,1,3,13,3,19,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,24,35,4,5,9,18,24,17,8,25,5,22,94,1,161,51,38,1,5,1,36,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{100,6,14,1,5,1,1,14,1,3,1,1,2,1,3,112,1,9,2,49,74,13,1,178,1,8,5,1,10,19,10,1,0,0,0,0,0,0,0,0,0,0,0},{12,15,2,2,25,56,19,9,2,15,1,1,161,198,9,37,4,36,23,8,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{39,2,532,6,1,64,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{107,9,3,6,100,30,4,153,3,59,3,5,137,2,5,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}};


int definirBleachingDeUmaRede(int rede) {

  int somaHits = 0;
  int nHits = 0;

  for (int neuronio = 0; neuronio < nNeuronios; neuronio++) {
    for (int hit = 0; hit < nDados[rede][neuronio]; hit++) {
      somaHits += tabelaDeDadosValues[rede][neuronio][hit];
      if (tabelaDeDadosValues[rede][neuronio][hit] > 0) {
        nHits++;
      }
    }
  }
  return somaHits / nHits;
}

int definirBleachingDasRedes() {

  int somaBleaching = 0;

  for (int i = 0; i < 5; i++) {
    somaBleaching += definirBleachingDeUmaRede(i);
  }
  return somaBleaching / 5;
}

long binConv(String binary)
{
  long decimal = 0;
  
  for (int counter = 0; counter < BITS_PER_RAM ; counter++)
  {
    if (binary[counter] == '1')
      decimal += pow(2,BITS_PER_RAM - 1 - counter);
  }
  return decimal;
}

int testeDeEntrada(int rede, int* entrada, int limiteDoBleaching) {

  int resultado = 0;

  for (int neuronio = 0; neuronio < nNeuronios; neuronio++) {
    
    String tabelaKey = "";
    for (int indice = 0; indice < nIndicesDeEntradas; indice++) {
      if (entrada[indicesDeEntradas[rede][neuronio][indice]] > 0) {
        tabelaKey += "1";
      } else {
        tabelaKey += "0";
      }
    }
 
    for (int dado = 0; dado < nDados[rede][neuronio]; dado++) {
      if (binConv(tabelaKey) == tabelaDeDadosKeys[rede][neuronio][dado]) {
        if (tabelaDeDadosValues[rede][neuronio][dado] > limiteDoBleaching) {
          resultado++;
        }
      }
    }

  }
  return resultado;
}

String testarRedes(int limiteDoBleaching, int* entrada) {

  int melhorResultado = -1;
  String labelDoMelhorResultado = "";

  for (int rede = 0; rede < 5; rede++) {
    int resultado = testeDeEntrada(rede, entrada, limiteDoBleaching);
    if (resultado > melhorResultado) {
      melhorResultado = resultado;
      labelDoMelhorResultado = labels[rede];
    }
  }
  return labelDoMelhorResultado;
}



